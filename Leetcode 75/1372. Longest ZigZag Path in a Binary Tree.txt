# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestZigZag(self, root: Optional[TreeNode]) -> int:
        maxCount = 0
        def helper(root,dir,count):
            nonlocal maxCount
            if not root:
                return
            maxCount = max(maxCount, count)
            if dir == "right":
                helper(root.left,"left", count + 1)
                helper(root.right,"right", 1)
            else:  
                helper(root.right,"right", count+ 1)
                helper(root.left,"left", 1)
        
        if not root:
            return 0
        helper(root, "left", 0)
        helper(root, "right", 0)

        return maxCount
